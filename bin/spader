#!/usr/bin/env ruby

# SPADER
# WebExtension maker's toolkit.
# Copyright (C) 2020 Cosmic Shovel, Inc.

require "spader"

#require_relative "rb/dl_libs"
#require_relative "rb/rendering_helpers"

########################################################################################

if ARGV.length() == 0 || ARGV[0] == "--help" || ARGV[0] == "-h"
  puts "Usage: spader <command> <args>\nvalid commands: generate, download, build, help\nspader <command> --help"
  exit(0)
end

spader_command = ARGV[0]
spader_command_args = ARGV.drop(1)

begin

  case spader_command
  when "build"
    Spader.build(spader_command_args)
    #dmsg("Building...")
    #build(ARGV[1].dup(), ARGV[2].dup(), ARGV[3].dup(), ARGV[4].dup(), ARGV.include?("--zip"))
  when "download"
    Spader.download(spader_command_args)
    #dmsg("Downloading...")
    #dmsg("Not implemented!")
  when "generate"
    Spader.generate(spader_command_args)
    #dmsg("Generating skeleton...")
    
    #title = ARGV[1]
    
    #if title.nil?()
    #  dmsg("ruby spader.rb --skeleton <extension name>")
    #  exit(0)
    #end
    
    #generate_skeleton(__dir__ + "/#{title.downcase().gsub(" ", "_")}/", title)
  when "help"
    case spader_command_args[0]
    when "build"
      puts "The build command compiles your code into a WebExtension."
    when "download"
      puts "The download command installs bit-perfect copies of third party libraries into your source directory ."
    when "skeleton"
      puts "The skeleton command generates an empty but build-able project directory."
    else
      puts "Invalid command: #{spader_command_args[0]}"
    end
    
    exit(0)
  else
    puts "Invalid command, exiting."
    exit(0)
  end
rescue Spader::Command::InvalidParametersError => e
  puts "Aborting due to invalid parameters."
  exit(1)
end

exit(0)